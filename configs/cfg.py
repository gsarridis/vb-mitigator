from yacs.config import CfgNode as CN
from tools.utils import log_msg


def show_cfg(cfg, logger):
    dump_cfg = CN()
    dump_cfg.EXPERIMENT = cfg.EXPERIMENT
    dump_cfg.MODEL = cfg.MODEL
    dump_cfg.DATASET = cfg.DATASET
    dump_cfg.MITIGATOR = cfg.MITIGATOR
    dump_cfg.SOLVER = cfg.SOLVER
    dump_cfg.LOG = cfg.LOG
    if cfg.MITIGATOR.TYPE in cfg:
        dump_cfg.update({cfg.MITIGATOR.TYPE: cfg.get(cfg.MITIGATOR.TYPE)})
    log_msg("CONFIG:\n{}".format(dump_cfg.dump()), "INFO", logger)


CFG = CN()
# Experiment
CFG.EXPERIMENT = CN()
CFG.EXPERIMENT.PROJECT = "biased_mnist"
CFG.EXPERIMENT.NAME = "dev"
CFG.EXPERIMENT.TAG = "vanilla"
CFG.EXPERIMENT.GPU = "cuda:0"  # or cpu
CFG.EXPERIMENT.SEED = 1
# Model
CFG.MODEL = CN()
CFG.MODEL.TYPE = "resnet"

# Solver
CFG.SOLVER = CN()
CFG.SOLVER.BATCH_SIZE = 64
CFG.SOLVER.EPOCHS = 240
CFG.SOLVER.LR = 0.05
CFG.SOLVER.WEIGHT_DECAY = 0.0001
CFG.SOLVER.MOMENTUM = 0.9
CFG.SOLVER.TYPE = "SGD"
CFG.SOLVER.CRITERION = "CE"
CFG.SOLVER.SCHEDULER = CN()
CFG.SOLVER.SCHEDULER.TYPE = "MultiStepLR"
CFG.SOLVER.SCHEDULER.LR_DECAY_STAGES = [150, 180, 210]
CFG.SOLVER.SCHEDULER.LR_DECAY_RATE = 0.1
# Log
CFG.LOG = CN()
CFG.LOG.TENSORBOARD_FREQ = 500
CFG.LOG.SAVE_CHECKPOINT_FREQ = 40
CFG.LOG.PREFIX = "./output"
CFG.LOG.WANDB = False
CFG.LOG.TRAIN_PERFORMANCE = False
CFG.LOG.SAVE_CRITERION = "val"

CFG.METRIC = "acc"
# Dataset
CFG.DATASET = CN()
CFG.DATASET.TYPE = "cifar100"
CFG.DATASET.NUM_WORKERS = 8
CFG.DATASET.TEST = CN()
CFG.DATASET.TEST.BATCH_SIZE = 64

# Dataset specific arguements
CFG.DATASET.BIASED_MNIST = CN()
CFG.DATASET.BIASED_MNIST.RATIO = 1
CFG.DATASET.BIASED_MNIST.CORR = 0.99
CFG.DATASET.BIASED_MNIST.ROOT = "./data/biased_mnist"
# MITIGATOR
CFG.MITIGATOR = CN()
CFG.MITIGATOR.TYPE = "erm"  # Vanilla as default
# MAVias CFG
CFG.MITIGATOR.MAVIAS = CN()
CFG.MITIGATOR.MAVIAS.TAGGING_MODEL = "ram"
CFG.MITIGATOR.MAVIAS.ENCODER = "clip"
CFG.MITIGATOR.MAVIAS.LLM = "llama"
CFG.MITIGATOR.MAVIAS.LOSS = CN()
CFG.MITIGATOR.MAVIAS.LOSS.ALPHA = 1.0
CFG.MITIGATOR.MAVIAS.LOSS.LAMBDA = 1.0
